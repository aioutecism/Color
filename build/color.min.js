"use strict";function _classCallCheck(r,e){if(!(r instanceof e))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function r(r,e){for(var a=0;a<e.length;a++){var t=e[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(r,t.key,t)}}return function(e,a,t){return a&&r(e.prototype,a),t&&r(e,t),e}}(),Color=function(){function r(){_classCallCheck(this,r)}return _createClass(r,null,[{key:"hex2RGB",value:function(r){var e=arguments.length<=1||void 0===arguments[1]?"rgba($r, $g, $b, $a)":arguments[1],a=function(r){return parseInt(r,16)};if(r=r.replace(/^#/,""),!r.match(/^([0-9a-f]{6}|[0-9a-f]{8})$/i))return void console.error("Hex's format is not correct.");var t=a(r.substr(0,2)),s=a(r.substr(2,2)),n=a(r.substr(4,2)),o=a(r.substr(6,2)||"FF");return e.replace(/\$r/i,t).replace(/\$g/i,s).replace(/\$b/i,n).replace(/\$a/i,o)}},{key:"rgb2Hex",value:function(r){var e=arguments.length<=1||void 0===arguments[1]?"#$RR$GG$BB":arguments[1],a=void 0,t=void 0,s=void 0,n=1;if(Array.isArray(r)&&r.length>=3&&r.length<=4)a=r[0],t=r[1],s=r[2],n=r[3]||n;else if("string"==typeof r&&r.match(/^rgb\(\d+\s*,\s*\d+\s*,\s*\d+\s*\)$/i)){var o=r.match(/rgb\((\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)/i);a=o[1],t=o[2],s=o[3]}else if("string"==typeof r&&r.match(/^rgba\(\d+\s*,\s*\d+\s*,\s*\d+\s*,\s*(0|1|0\.\d+)\s*\)$/i)){var o=r.match(/rgba\((\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*,\s*(0|1|0\.\d+)\s*\)/i);a=o[1],t=o[2],s=o[3],n=o[4]}if(void 0===a||void 0===t||void 0===s||void 0===n)return void console.error(["Color should be an array like `[10, 20, 30]` or `[10, 20, 30, 0.5]`","or string like `rgb(10, 20, 30)` or `rgba(10, 20, 30, 0.5)`."].join("\n"));var i=function(r){var e=r.toString(16);return 1===e.length?"0"+e:e};return a=i(parseInt(a,10)),t=i(parseInt(t,10)),s=i(parseInt(s,10)),n=i(Math.round(255*parseFloat(n))),e.replace(/\$RR/,a.toUpperCase()).replace(/\$rr/,a.toLowerCase()).replace(/\$GG/,t.toUpperCase()).replace(/\$gg/,t.toLowerCase()).replace(/\$BB/,s.toUpperCase()).replace(/\$bb/,s.toLowerCase()).replace(/\$AA/,n.toUpperCase()).replace(/\$aa/,n.toLowerCase())}}]),r}();